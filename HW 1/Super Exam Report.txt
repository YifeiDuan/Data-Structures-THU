A.算法的构思、原理与实现
对于一名考生，需要用到的与之对应的信息包括了学号、顺时针后继、逆时针后继，
所以考虑定义结构体，把这些信息存入其中。
在每个人落座的过程中，考虑通过逆时针后继逐次指向下一位置的人，
来模拟走过m个人找位置的过程，因此在模拟n个考生找座位的外循环内嵌入一个m内循环。
每次找到位置之后，此时链表中需要改变的内容有三个部分，改变后即完成外循环中的一次操作：
插入新的结构体；逆时针语境下前一个人的逆时针后继；逆时针语境下后一个人的顺时针后继。
外循环结束后，即可从最后落座者开始利用结构体内顺时针后继依次输出学号。

B.问题的认识与解决
起初希望通过计算来确定新落座的位置，这要求将已落座者的排序通过数组下标的形式记录下来，
但是结构体数组本身在输入学号时已经有了下标，于是考虑直接利用结构体内的指针来顺次模拟走过m个人的过程；
每次落座后要修改内部指针，原本试图直接用链表内的指针关系来修改，但是无法明确后继是谁，
因此另外定义next来永远指向所在位置的后继。

C.时间空间复杂度估计
时间复杂度：有内外两层循环，时间复杂度为O(mn);
空间复杂度：始终只有n个结构体占据空间，空间复杂度为O(n)
