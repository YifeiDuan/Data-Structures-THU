一、算法思路与实现
利用manacher算法。首先转换输入的字符串，使得原字符串的每个元素两边都有“#”。
接下来，针对新字符串中每个元素，确定以其为中心的最大回文半径，将这一数值折半向上取整，
即得到这个元素为中心的回文序列数目。在这一过程中，利用manacher算法，减小时间复杂度。
为此需要记录已找到的回文延伸到的最远端，在对秩i循环时不断更新这个数值，保证只顺次访问一遍。
i小于mx时，利用对称性确定其回文半径起算值，i大于mx时则只能从0起算。

二、问题与解决
1.存储空间：第一次是在main函数中声明大规模数组变量，导致编译出问题，而后改为全局变量解决。
2.超时：测试出现超时，反复检查代码后没有找到问题，尝试调整输入方式也没有获得解决。

三、时空复杂度分析
1.时间复杂度：
manacher算法在确定每个中心的最大回文半径时由于记录了mx值，所以每个字符其实只被访问一次，
时间复杂度控制在O(n)，n为字符串长度；
2.空间复杂度：
由于是全局变量数组，所以是O(17000000)。